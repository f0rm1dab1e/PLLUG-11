// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$bg-name: 'bg';
$bg-x: 0px;
$bg-y: 0px;
$bg-offset-x: 0px;
$bg-offset-y: 0px;
$bg-width: 250px;
$bg-height: 250px;
$bg-total-width: 760px;
$bg-total-height: 760px;
$bg-image: '../images/sprite.png';
$bg: (0px, 0px, 0px, 0px, 250px, 250px, 760px, 760px, '../images/sprite.png', 'bg', );
$monkey-name: 'monkey';
$monkey-x: 255px;
$monkey-y: 0px;
$monkey-offset-x: -255px;
$monkey-offset-y: 0px;
$monkey-width: 250px;
$monkey-height: 250px;
$monkey-total-width: 760px;
$monkey-total-height: 760px;
$monkey-image: '../images/sprite.png';
$monkey: (255px, 0px, -255px, 0px, 250px, 250px, 760px, 760px, '../images/sprite.png', 'monkey', );
$mouse-name: 'mouse';
$mouse-x: 0px;
$mouse-y: 255px;
$mouse-offset-x: 0px;
$mouse-offset-y: -255px;
$mouse-width: 250px;
$mouse-height: 250px;
$mouse-total-width: 760px;
$mouse-total-height: 760px;
$mouse-image: '../images/sprite.png';
$mouse: (0px, 255px, 0px, -255px, 250px, 250px, 760px, 760px, '../images/sprite.png', 'mouse', );
$pig-name: 'pig';
$pig-x: 255px;
$pig-y: 255px;
$pig-offset-x: -255px;
$pig-offset-y: -255px;
$pig-width: 250px;
$pig-height: 250px;
$pig-total-width: 760px;
$pig-total-height: 760px;
$pig-image: '../images/sprite.png';
$pig: (255px, 255px, -255px, -255px, 250px, 250px, 760px, 760px, '../images/sprite.png', 'pig', );
$rabbit-name: 'rabbit';
$rabbit-x: 510px;
$rabbit-y: 0px;
$rabbit-offset-x: -510px;
$rabbit-offset-y: 0px;
$rabbit-width: 250px;
$rabbit-height: 250px;
$rabbit-total-width: 760px;
$rabbit-total-height: 760px;
$rabbit-image: '../images/sprite.png';
$rabbit: (510px, 0px, -510px, 0px, 250px, 250px, 760px, 760px, '../images/sprite.png', 'rabbit', );
$rhino-name: 'rhino';
$rhino-x: 510px;
$rhino-y: 255px;
$rhino-offset-x: -510px;
$rhino-offset-y: -255px;
$rhino-width: 250px;
$rhino-height: 250px;
$rhino-total-width: 760px;
$rhino-total-height: 760px;
$rhino-image: '../images/sprite.png';
$rhino: (510px, 255px, -510px, -255px, 250px, 250px, 760px, 760px, '../images/sprite.png', 'rhino', );
$squirell-name: 'squirell';
$squirell-x: 0px;
$squirell-y: 510px;
$squirell-offset-x: 0px;
$squirell-offset-y: -510px;
$squirell-width: 250px;
$squirell-height: 250px;
$squirell-total-width: 760px;
$squirell-total-height: 760px;
$squirell-image: '../images/sprite.png';
$squirell: (0px, 510px, 0px, -510px, 250px, 250px, 760px, 760px, '../images/sprite.png', 'squirell', );
$tiger-name: 'tiger';
$tiger-x: 255px;
$tiger-y: 510px;
$tiger-offset-x: -255px;
$tiger-offset-y: -510px;
$tiger-width: 250px;
$tiger-height: 250px;
$tiger-total-width: 760px;
$tiger-total-height: 760px;
$tiger-image: '../images/sprite.png';
$tiger: (255px, 510px, -255px, -510px, 250px, 250px, 760px, 760px, '../images/sprite.png', 'tiger', );
$zhiraf-name: 'zhiraf';
$zhiraf-x: 510px;
$zhiraf-y: 510px;
$zhiraf-offset-x: -510px;
$zhiraf-offset-y: -510px;
$zhiraf-width: 250px;
$zhiraf-height: 250px;
$zhiraf-total-width: 760px;
$zhiraf-total-height: 760px;
$zhiraf-image: '../images/sprite.png';
$zhiraf: (510px, 510px, -510px, -510px, 250px, 250px, 760px, 760px, '../images/sprite.png', 'zhiraf', );
$spritesheet-width: 760px;
$spritesheet-height: 760px;
$spritesheet-image: '../images/sprite.png';
$spritesheet-sprites: ($bg, $monkey, $mouse, $pig, $rabbit, $rhino, $squirell, $tiger, $zhiraf, );
$spritesheet: (760px, 760px, '../images/sprite.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
